#define KERNEL_SIZE 9

// Sharpness kernel
// -1 -1 -1
// -1 9 -1
// -1 -1 -1	
float kernel[KERNEL_SIZE];
vec2 offset[KERNEL_SIZE];
uniform sampler2DRect srcImage;
uniform float scale;

void main(void){
	int i = 0;
	vec4 sum = vec4(0.0);

	offset[0] = vec2(-1.0, -1.0);
	offset[1] = vec2(0.0, -1.0);
	offset[2] = vec2(1.0, -1.0);
	offset[3] = vec2(-1.0, 0.0);
	offset[4] = vec2(0.0, 0.0);
	offset[5] = vec2(1.0, 0.0);
	offset[6] = vec2(-1.0, 1.0);
	offset[7] = vec2(0.0, 1.0);
	offset[8] = vec2(1.0, 1.0);

	kernel[0] = -1.0 * scale;
	kernel[1] = -1.0 * scale;
	kernel[2] = -1.0 * scale;
	kernel[3] = -1.0 * scale;
	kernel[4] = 9.0 * scale + (1.0 - scale);
	kernel[5] = -1.0 * scale;
	kernel[6] = -1.0 * scale;
	kernel[7] = -1.0 * scale;
	kernel[8] = -1.0 * scale;

	for( i=0; i<KERNEL_SIZE; i++ ){
		vec4 tmp = texture2DRect(srcImage, gl_TexCoord[0].xy + offset[i]);
		sum += tmp * kernel[i];
	}

	gl_FragColor = sum;
}